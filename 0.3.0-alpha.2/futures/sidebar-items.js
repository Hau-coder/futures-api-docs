initSidebarItems({"macro":[["join","Polls multiple futures simultaneously, returning a tuple of all results once complete. "],["pending","A macro which yields to the event loop once."],["pin_mut","Pins a value on the stack."],["poll","A macro which returns the result of polling a future once within the current `async` context."],["ready","Extracts the successful type of a `Poll<T>`."],["select","Polls multiple futures simultaneously, executing the branch for the future  that finishes first."],["try_poll","Extracts `Poll<T>` from `Poll<Result<T, E>>`."],["try_ready","Extracts the successful type of a `Poll<Result<T, E>>`."],["unsafe_pinned","A pinned projection of a struct field."],["unsafe_unpinned","An unpinned projection of a struct field."]],"mod":[["channel","Cross-task communication."],["executor","Task execution."],["future","Asynchronous values."],["io","Asynchronous I/O."],["prelude","A \"prelude\" for crates using the `futures` crate."],["sink","Asynchronous sinks."],["stream","Asynchronous streams."],["task","Tools for working with tasks."]]});