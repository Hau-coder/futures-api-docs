(function() {var implementors = {};
implementors["futures_channel"] = [{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.Sender.html\" title=\"struct futures_channel::mpsc::Sender\">Sender</a>&lt;T&gt;",synthetic:true,types:["futures_channel::mpsc::Sender"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedSender.html\" title=\"struct futures_channel::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;",synthetic:true,types:["futures_channel::mpsc::UnboundedSender"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.Receiver.html\" title=\"struct futures_channel::mpsc::Receiver\">Receiver</a>&lt;T&gt;",synthetic:true,types:["futures_channel::mpsc::Receiver"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedReceiver.html\" title=\"struct futures_channel::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;",synthetic:true,types:["futures_channel::mpsc::UnboundedReceiver"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.SendError.html\" title=\"struct futures_channel::mpsc::SendError\">SendError</a>",synthetic:true,types:["futures_channel::mpsc::SendError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.TrySendError.html\" title=\"struct futures_channel::mpsc::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_channel::mpsc::TrySendError"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.TryRecvError.html\" title=\"struct futures_channel::mpsc::TryRecvError\">TryRecvError</a>",synthetic:true,types:["futures_channel::mpsc::TryRecvError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Receiver.html\" title=\"struct futures_channel::oneshot::Receiver\">Receiver</a>&lt;T&gt;",synthetic:true,types:["futures_channel::oneshot::Receiver"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Sender.html\" title=\"struct futures_channel::oneshot::Sender\">Sender</a>&lt;T&gt;",synthetic:true,types:["futures_channel::oneshot::Sender"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Canceled.html\" title=\"struct futures_channel::oneshot::Canceled\">Canceled</a>",synthetic:true,types:["futures_channel::oneshot::Canceled"]},];
implementors["futures_core"] = [{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_core/future/struct.FutureObj.html\" title=\"struct futures_core::future::FutureObj\">FutureObj</a>&lt;'a, T&gt;",synthetic:true,types:["futures_core::future::future_obj::FutureObj"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_core/future/struct.LocalFutureObj.html\" title=\"struct futures_core::future::LocalFutureObj\">LocalFutureObj</a>&lt;'a, T&gt;",synthetic:true,types:["futures_core::future::future_obj::LocalFutureObj"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_core/task/struct.SpawnError.html\" title=\"struct futures_core::task::SpawnError\">SpawnError</a>",synthetic:true,types:["futures_core::task::spawn::SpawnError"]},];
implementors["futures_executor"] = [{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_executor/struct.BlockingStream.html\" title=\"struct futures_executor::BlockingStream\">BlockingStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["futures_executor::local_pool::BlockingStream"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.LocalPool.html\" title=\"struct futures_executor::LocalPool\">LocalPool</a>",synthetic:true,types:["futures_executor::local_pool::LocalPool"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.LocalSpawner.html\" title=\"struct futures_executor::LocalSpawner\">LocalSpawner</a>",synthetic:true,types:["futures_executor::local_pool::LocalSpawner"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.ThreadPool.html\" title=\"struct futures_executor::ThreadPool\">ThreadPool</a>",synthetic:true,types:["futures_executor::thread_pool::ThreadPool"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.ThreadPoolBuilder.html\" title=\"struct futures_executor::ThreadPoolBuilder\">ThreadPoolBuilder</a>",synthetic:true,types:["futures_executor::thread_pool::ThreadPoolBuilder"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.Enter.html\" title=\"struct futures_executor::Enter\">Enter</a>",synthetic:true,types:["futures_executor::enter::Enter"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.EnterError.html\" title=\"struct futures_executor::EnterError\">EnterError</a>",synthetic:true,types:["futures_executor::enter::EnterError"]},];
implementors["futures_test"] = [{text:"impl Freeze for <a class=\"struct\" href=\"futures_test/task/struct.NoopSpawner.html\" title=\"struct futures_test::task::NoopSpawner\">NoopSpawner</a>",synthetic:true,types:["futures_test::task::noop_spawner::NoopSpawner"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_test/task/struct.PanicSpawner.html\" title=\"struct futures_test::task::PanicSpawner\">PanicSpawner</a>",synthetic:true,types:["futures_test::task::panic_spawner::PanicSpawner"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_test/task/struct.RecordSpawner.html\" title=\"struct futures_test::task::RecordSpawner\">RecordSpawner</a>",synthetic:true,types:["futures_test::task::record_spawner::RecordSpawner"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_test/task/struct.AwokenCount.html\" title=\"struct futures_test::task::AwokenCount\">AwokenCount</a>",synthetic:true,types:["futures_test::task::wake_counter::AwokenCount"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_test/future/struct.AssertUnmoved.html\" title=\"struct futures_test::future::AssertUnmoved\">AssertUnmoved</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_test::future::assert_unmoved::AssertUnmoved"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_test/future/struct.PendingOnce.html\" title=\"struct futures_test::future::PendingOnce\">PendingOnce</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_test::future::pending_once::PendingOnce"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_test/future/struct.InterleavePending.html\" title=\"struct futures_test::future::InterleavePending\">InterleavePending</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_test::interleave_pending::InterleavePending"]},{text:"impl&lt;Io&gt; Freeze for <a class=\"struct\" href=\"futures_test/io/read/struct.Limited.html\" title=\"struct futures_test::io::read::Limited\">Limited</a>&lt;Io&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Io: Freeze,&nbsp;</span>",synthetic:true,types:["futures_test::io::limited::Limited"]},];
implementors["futures_util"] = [{text:"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Lazy.html\" title=\"struct futures_util::future::Lazy\">Lazy</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::lazy::Lazy"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Pending.html\" title=\"struct futures_util::future::Pending\">Pending</a>&lt;T&gt;",synthetic:true,types:["futures_util::future::pending::Pending"]},{text:"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OptionFuture.html\" title=\"struct futures_util::future::OptionFuture\">OptionFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::option::OptionFuture"]},{text:"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.PollFn.html\" title=\"struct futures_util::future::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::poll_fn::PollFn"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Ready.html\" title=\"struct futures_util::future::Ready\">Ready</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::ready::Ready"]},{text:"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join.html\" title=\"struct futures_util::future::Join\">Join</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::join::Join"]},{text:"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join3.html\" title=\"struct futures_util::future::Join3\">Join3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::join::Join3"]},{text:"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join4.html\" title=\"struct futures_util::future::Join4\">Join4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::join::Join4"]},{text:"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join5.html\" title=\"struct futures_util::future::Join5\">Join5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::join::Join5"]},{text:"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.JoinAll.html\" title=\"struct futures_util::future::JoinAll\">JoinAll</a>&lt;F&gt;",synthetic:true,types:["futures_util::future::join_all::JoinAll"]},{text:"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Select.html\" title=\"struct futures_util::future::Select\">Select</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::select::Select"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectAll.html\" title=\"struct futures_util::future::SelectAll\">SelectAll</a>&lt;Fut&gt;",synthetic:true,types:["futures_util::future::select_all::SelectAll"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Flatten.html\" title=\"struct futures_util::future::Flatten\">Flatten</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::flatten::Flatten"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.FlattenStream.html\" title=\"struct futures_util::future::FlattenStream\">FlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::flatten_stream::FlattenStream"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Fuse.html\" title=\"struct futures_util::future::Fuse\">Fuse</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::fuse::Fuse"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoStream.html\" title=\"struct futures_util::future::IntoStream\">IntoStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::into_stream::IntoStream"]},{text:"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::map::Map"]},{text:"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Then.html\" title=\"struct futures_util::future::Then\">Then</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::then::Then"]},{text:"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::inspect::Inspect"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnitError.html\" title=\"struct futures_util::future::UnitError\">UnitError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::unit_error::UnitError"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.NeverError.html\" title=\"struct futures_util::future::NeverError\">NeverError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::never_error::NeverError"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Abortable.html\" title=\"struct futures_util::future::Abortable\">Abortable</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::abortable::Abortable"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortHandle.html\" title=\"struct futures_util::future::AbortHandle\">AbortHandle</a>",synthetic:true,types:["futures_util::future::abortable::AbortHandle"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortRegistration.html\" title=\"struct futures_util::future::AbortRegistration\">AbortRegistration</a>",synthetic:true,types:["futures_util::future::abortable::AbortRegistration"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Aborted.html\" title=\"struct futures_util::future::Aborted\">Aborted</a>",synthetic:true,types:["futures_util::future::abortable::Aborted"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.CatchUnwind.html\" title=\"struct futures_util::future::CatchUnwind\">CatchUnwind</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::catch_unwind::CatchUnwind"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Remote.html\" title=\"struct futures_util::future::Remote\">Remote</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::remote_handle::Remote"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.RemoteHandle.html\" title=\"struct futures_util::future::RemoteHandle\">RemoteHandle</a>&lt;T&gt;",synthetic:true,types:["futures_util::future::remote_handle::RemoteHandle"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Shared.html\" title=\"struct futures_util::future::Shared\">Shared</a>&lt;Fut&gt;",synthetic:true,types:["futures_util::future::shared::Shared"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.MaybeDone.html\" title=\"enum futures_util::future::MaybeDone\">MaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::maybe_done::MaybeDone"]},{text:"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.Either.html\" title=\"enum futures_util::future::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::future::either::Either"]},{text:"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.TryJoin.html\" title=\"struct futures_util::try_future::TryJoin\">TryJoin</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::try_join::TryJoin"]},{text:"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.TryJoin3.html\" title=\"struct futures_util::try_future::TryJoin3\">TryJoin3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::try_join::TryJoin3"]},{text:"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.TryJoin4.html\" title=\"struct futures_util::try_future::TryJoin4\">TryJoin4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::try_join::TryJoin4"]},{text:"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.TryJoin5.html\" title=\"struct futures_util::try_future::TryJoin5\">TryJoin5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::try_future::TryFuture::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::try_join::TryJoin5"]},{text:"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.TryJoinAll.html\" title=\"struct futures_util::try_future::TryJoinAll\">TryJoinAll</a>&lt;F&gt;",synthetic:true,types:["futures_util::try_future::try_join_all::TryJoinAll"]},{text:"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.TrySelect.html\" title=\"struct futures_util::try_future::TrySelect\">TrySelect</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::try_select::TrySelect"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.SelectOk.html\" title=\"struct futures_util::try_future::SelectOk\">SelectOk</a>&lt;Fut&gt;",synthetic:true,types:["futures_util::try_future::select_ok::SelectOk"]},{text:"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.AndThen.html\" title=\"struct futures_util::try_future::AndThen\">AndThen</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::and_then::AndThen"]},{text:"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.ErrInto.html\" title=\"struct futures_util::try_future::ErrInto\">ErrInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::err_into::ErrInto"]},{text:"impl&lt;Fut, Si&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.FlattenSink.html\" title=\"struct futures_util::try_future::FlattenSink\">FlattenSink</a>&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::flatten_sink::FlattenSink"]},{text:"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.InspectOk.html\" title=\"struct futures_util::try_future::InspectOk\">InspectOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::inspect_ok::InspectOk"]},{text:"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.InspectErr.html\" title=\"struct futures_util::try_future::InspectErr\">InspectErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::inspect_err::InspectErr"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.IntoFuture.html\" title=\"struct futures_util::try_future::IntoFuture\">IntoFuture</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::into_future::IntoFuture"]},{text:"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.MapErr.html\" title=\"struct futures_util::try_future::MapErr\">MapErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::map_err::MapErr"]},{text:"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.MapOk.html\" title=\"struct futures_util::try_future::MapOk\">MapOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::map_ok::MapOk"]},{text:"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.OrElse.html\" title=\"struct futures_util::try_future::OrElse\">OrElse</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::or_else::OrElse"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.TryFlattenStream.html\" title=\"struct futures_util::try_future::TryFlattenStream\">TryFlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/try_future/trait.TryFuture.html\" title=\"trait futures_util::try_future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/try_future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::try_future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::try_flatten_stream::TryFlattenStream"]},{text:"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_future/struct.UnwrapOrElse.html\" title=\"struct futures_util::try_future::UnwrapOrElse\">UnwrapOrElse</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_future::unwrap_or_else::UnwrapOrElse"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Iter.html\" title=\"struct futures_util::stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::iter::Iter"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Repeat.html\" title=\"struct futures_util::stream::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::repeat::Repeat"]},{text:"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chain.html\" title=\"struct futures_util::stream::Chain\">Chain</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::chain::Chain"]},{text:"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Collect.html\" title=\"struct futures_util::stream::Collect\">Collect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::collect::Collect"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Concat.html\" title=\"struct futures_util::stream::Concat\">Concat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::concat::Concat"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Empty.html\" title=\"struct futures_util::stream::Empty\">Empty</a>&lt;T&gt;",synthetic:true,types:["futures_util::stream::empty::Empty"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Enumerate.html\" title=\"struct futures_util::stream::Enumerate\">Enumerate</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::enumerate::Enumerate"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Filter.html\" title=\"struct futures_util::stream::Filter\">Filter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::filter::Filter"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FilterMap.html\" title=\"struct futures_util::stream::FilterMap\">FilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::filter_map::FilterMap"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Flatten.html\" title=\"struct futures_util::stream::Flatten\">Flatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::flatten::Flatten"]},{text:"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fold.html\" title=\"struct futures_util::stream::Fold\">Fold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::fold::Fold"]},{text:"impl&lt;St, Si&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Forward.html\" title=\"struct futures_util::stream::Forward\">Forward</a>&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/try_stream/trait.TryStream.html\" title=\"trait futures_util::try_stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/try_stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::try_stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::forward::Forward"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEach.html\" title=\"struct futures_util::stream::ForEach\">ForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::for_each::ForEach"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fuse.html\" title=\"struct futures_util::stream::Fuse\">Fuse</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::fuse::Fuse"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.StreamFuture.html\" title=\"struct futures_util::stream::StreamFuture\">StreamFuture</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::into_future::StreamFuture"]},{text:"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Inspect.html\" title=\"struct futures_util::stream::Inspect\">Inspect</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::inspect::Inspect"]},{text:"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Map.html\" title=\"struct futures_util::stream::Map\">Map</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::map::Map"]},{text:"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Next.html\" title=\"struct futures_util::stream::Next\">Next</a>&lt;'a, St&gt;",synthetic:true,types:["futures_util::stream::next::Next"]},{text:"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectNextSome.html\" title=\"struct futures_util::stream::SelectNextSome\">SelectNextSome</a>&lt;'a, St&gt;",synthetic:true,types:["futures_util::stream::select_next_some::SelectNextSome"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Once.html\" title=\"struct futures_util::stream::Once\">Once</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::once::Once"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peekable.html\" title=\"struct futures_util::stream::Peekable\">Peekable</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::peek::Peekable"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Pending.html\" title=\"struct futures_util::stream::Pending\">Pending</a>&lt;T&gt;",synthetic:true,types:["futures_util::stream::pending::Pending"]},{text:"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PollFn.html\" title=\"struct futures_util::stream::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::poll_fn::PollFn"]},{text:"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Select.html\" title=\"struct futures_util::stream::Select\">Select</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::select::Select"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Skip.html\" title=\"struct futures_util::stream::Skip\">Skip</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::skip::Skip"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SkipWhile.html\" title=\"struct futures_util::stream::SkipWhile\">SkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::skip_while::SkipWhile"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Take.html\" title=\"struct futures_util::stream::Take\">Take</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::take::Take"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeWhile.html\" title=\"struct futures_util::stream::TakeWhile\">TakeWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::take_while::TakeWhile"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Then.html\" title=\"struct futures_util::stream::Then\">Then</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::then::Then"]},{text:"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Unfold.html\" title=\"struct futures_util::stream::Unfold\">Unfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::unfold::Unfold"]},{text:"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Zip.html\" title=\"struct futures_util::stream::Zip\">Zip</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::zip::Zip"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chunks.html\" title=\"struct futures_util::stream::Chunks\">Chunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::chunks::Chunks"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.BufferUnordered.html\" title=\"struct futures_util::stream::BufferUnordered\">BufferUnordered</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::buffer_unordered::BufferUnordered"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Buffered.html\" title=\"struct futures_util::stream::Buffered\">Buffered</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::buffered::Buffered"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEachConcurrent.html\" title=\"struct futures_util::stream::ForEachConcurrent\">ForEachConcurrent</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::for_each_concurrent::ForEachConcurrent"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesOrdered.html\" title=\"struct futures_util::stream::FuturesOrdered\">FuturesOrdered</a>&lt;T&gt;",synthetic:true,types:["futures_util::stream::futures_ordered::FuturesOrdered"]},{text:"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.FuturesUnordered.html\" title=\"struct futures_util::stream::futures_unordered::FuturesUnordered\">FuturesUnordered</a>&lt;Fut&gt;",synthetic:true,types:["futures_util::stream::futures_unordered::FuturesUnordered"]},{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SplitStream.html\" title=\"struct futures_util::stream::SplitStream\">SplitStream</a>&lt;S&gt;",synthetic:true,types:["futures_util::stream::split::SplitStream"]},{text:"impl&lt;S, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SplitSink.html\" title=\"struct futures_util::stream::SplitSink\">SplitSink</a>&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::split::SplitSink"]},{text:"impl&lt;T, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ReuniteError.html\" title=\"struct futures_util::stream::ReuniteError\">ReuniteError</a>&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::split::ReuniteError"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectAll.html\" title=\"struct futures_util::stream::SelectAll\">SelectAll</a>&lt;St&gt;",synthetic:true,types:["futures_util::stream::select_all::SelectAll"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.CatchUnwind.html\" title=\"struct futures_util::stream::CatchUnwind\">CatchUnwind</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::stream::catch_unwind::CatchUnwind"]},{text:"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterMut.html\" title=\"struct futures_util::stream::futures_unordered::IterMut\">IterMut</a>&lt;'a, Fut&gt;",synthetic:true,types:["futures_util::stream::futures_unordered::iter::IterMut"]},{text:"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinMut.html\" title=\"struct futures_util::stream::futures_unordered::IterPinMut\">IterPinMut</a>&lt;'a, Fut&gt;",synthetic:true,types:["futures_util::stream::futures_unordered::iter::IterPinMut"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.AndThen.html\" title=\"struct futures_util::try_stream::AndThen\">AndThen</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::and_then::AndThen"]},{text:"impl&lt;St, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.ErrInto.html\" title=\"struct futures_util::try_stream::ErrInto\">ErrInto</a>&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::err_into::ErrInto"]},{text:"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.InspectOk.html\" title=\"struct futures_util::try_stream::InspectOk\">InspectOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::inspect_ok::InspectOk"]},{text:"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.InspectErr.html\" title=\"struct futures_util::try_stream::InspectErr\">InspectErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::inspect_err::InspectErr"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.IntoStream.html\" title=\"struct futures_util::try_stream::IntoStream\">IntoStream</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::into_stream::IntoStream"]},{text:"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.MapOk.html\" title=\"struct futures_util::try_stream::MapOk\">MapOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::map_ok::MapOk"]},{text:"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.MapErr.html\" title=\"struct futures_util::try_stream::MapErr\">MapErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::map_err::MapErr"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.OrElse.html\" title=\"struct futures_util::try_stream::OrElse\">OrElse</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::or_else::OrElse"]},{text:"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryNext.html\" title=\"struct futures_util::try_stream::TryNext\">TryNext</a>&lt;'a, St&gt;",synthetic:true,types:["futures_util::try_stream::try_next::TryNext"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryForEach.html\" title=\"struct futures_util::try_stream::TryForEach\">TryForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_for_each::TryForEach"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryFilter.html\" title=\"struct futures_util::try_stream::TryFilter\">TryFilter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/try_stream/trait.TryStream.html\" title=\"trait futures_util::try_stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/try_stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::try_stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_filter::TryFilter"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryFilterMap.html\" title=\"struct futures_util::try_stream::TryFilterMap\">TryFilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_filter_map::TryFilterMap"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryFlatten.html\" title=\"struct futures_util::try_stream::TryFlatten\">TryFlatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/try_stream/trait.TryStream.html\" title=\"trait futures_util::try_stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/try_stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::try_stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_flatten::TryFlatten"]},{text:"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryCollect.html\" title=\"struct futures_util::try_stream::TryCollect\">TryCollect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_collect::TryCollect"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryConcat.html\" title=\"struct futures_util::try_stream::TryConcat\">TryConcat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/try_stream/trait.TryStream.html\" title=\"trait futures_util::try_stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/try_stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::try_stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_concat::TryConcat"]},{text:"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryFold.html\" title=\"struct futures_util::try_stream::TryFold\">TryFold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_fold::TryFold"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TrySkipWhile.html\" title=\"struct futures_util::try_stream::TrySkipWhile\">TrySkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/try_stream/trait.TryStream.html\" title=\"trait futures_util::try_stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/try_stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::try_stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_skip_while::TrySkipWhile"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryBufferUnordered.html\" title=\"struct futures_util::try_stream::TryBufferUnordered\">TryBufferUnordered</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_buffer_unordered::TryBufferUnordered"]},{text:"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.TryForEachConcurrent.html\" title=\"struct futures_util::try_stream::TryForEachConcurrent\">TryForEachConcurrent</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::try_for_each_concurrent::TryForEachConcurrent"]},{text:"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/try_stream/struct.IntoAsyncRead.html\" title=\"struct futures_util::try_stream::IntoAsyncRead\">IntoAsyncRead</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/try_stream/trait.TryStream.html\" title=\"trait futures_util::try_stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/try_stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::try_stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::try_stream::into_async_read::IntoAsyncRead"]},{text:"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Close.html\" title=\"struct futures_util::sink::Close\">Close</a>&lt;'a, Si, Item&gt;",synthetic:true,types:["futures_util::sink::close::Close"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Drain.html\" title=\"struct futures_util::sink::Drain\">Drain</a>&lt;T&gt;",synthetic:true,types:["futures_util::sink::drain::Drain"]},{text:"impl&lt;Si1, Si2&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Fanout.html\" title=\"struct futures_util::sink::Fanout\">Fanout</a>&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::sink::fanout::Fanout"]},{text:"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Flush.html\" title=\"struct futures_util::sink::Flush\">Flush</a>&lt;'a, Si, Item&gt;",synthetic:true,types:["futures_util::sink::flush::Flush"]},{text:"impl&lt;Si, Item, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SinkErrInto.html\" title=\"struct futures_util::sink::SinkErrInto\">SinkErrInto</a>&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::sink::err_into::SinkErrInto"]},{text:"impl&lt;Si, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SinkMapErr.html\" title=\"struct futures_util::sink::SinkMapErr\">SinkMapErr</a>&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::sink::map_err::SinkMapErr"]},{text:"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Send.html\" title=\"struct futures_util::sink::Send\">Send</a>&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::sink::send::Send"]},{text:"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SendAll.html\" title=\"struct futures_util::sink::SendAll\">SendAll</a>&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::sink::send_all::SendAll"]},{text:"impl&lt;Si, Item, U, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.With.html\" title=\"struct futures_util::sink::With\">With</a>&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::sink::with::With"]},{text:"impl&lt;Si, Item, U, St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.WithFlatMap.html\" title=\"struct futures_util::sink::WithFlatMap\">WithFlatMap</a>&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::sink::with_flat_map::WithFlatMap"]},{text:"impl&lt;Si, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Buffer.html\" title=\"struct futures_util::sink::Buffer\">Buffer</a>&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::sink::buffer::Buffer"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"futures_util/task/struct.WakerRef.html\" title=\"struct futures_util::task::WakerRef\">WakerRef</a>&lt;'a&gt;",synthetic:true,types:["futures_util::task::waker_ref::WakerRef"]},{text:"impl&lt;Ex&gt; Freeze for <a class=\"struct\" href=\"futures_util/compat/struct.Executor01As03.html\" title=\"struct futures_util::compat::Executor01As03\">Executor01As03</a>&lt;Ex&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ex: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::compat::executor::Executor01As03"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/compat/struct.Compat01As03.html\" title=\"struct futures_util::compat::Compat01As03\">Compat01As03</a>&lt;T&gt;",synthetic:true,types:["futures_util::compat::compat01as03::Compat01As03"]},{text:"impl&lt;S, SinkItem&gt; !Freeze for <a class=\"struct\" href=\"futures_util/compat/struct.Compat01As03Sink.html\" title=\"struct futures_util::compat::Compat01As03Sink\">Compat01As03Sink</a>&lt;S, SinkItem&gt;",synthetic:true,types:["futures_util::compat::compat01as03::Compat01As03Sink"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/compat/struct.Compat.html\" title=\"struct futures_util::compat::Compat\">Compat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::compat::compat03as01::Compat"]},{text:"impl&lt;T, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/compat/struct.CompatSink.html\" title=\"struct futures_util::compat::CompatSink\">CompatSink</a>&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::compat::compat03as01::CompatSink"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.AllowStdIo.html\" title=\"struct futures_util::io::AllowStdIo\">AllowStdIo</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::allow_std::AllowStdIo"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufReader.html\" title=\"struct futures_util::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::buf_reader::BufReader"]},{text:"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufWriter.html\" title=\"struct futures_util::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::buf_writer::BufWriter"]},{text:"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Chain.html\" title=\"struct futures_util::io::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::chain::Chain"]},{text:"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Close.html\" title=\"struct futures_util::io::Close\">Close</a>&lt;'a, W&gt;",synthetic:true,types:["futures_util::io::close::Close"]},{text:"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.CopyInto.html\" title=\"struct futures_util::io::CopyInto\">CopyInto</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::copy_into::CopyInto"]},{text:"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.CopyBufInto.html\" title=\"struct futures_util::io::CopyBufInto\">CopyBufInto</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::copy_buf_into::CopyBufInto"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Empty.html\" title=\"struct futures_util::io::Empty\">Empty</a>",synthetic:true,types:["futures_util::io::empty::Empty"]},{text:"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Flush.html\" title=\"struct futures_util::io::Flush\">Flush</a>&lt;'a, W&gt;",synthetic:true,types:["futures_util::io::flush::Flush"]},{text:"impl&lt;W, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.IntoSink.html\" title=\"struct futures_util::io::IntoSink\">IntoSink</a>&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::into_sink::IntoSink"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Lines.html\" title=\"struct futures_util::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::lines::Lines"]},{text:"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Read.html\" title=\"struct futures_util::io::Read\">Read</a>&lt;'a, R&gt;",synthetic:true,types:["futures_util::io::read::Read"]},{text:"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadVectored.html\" title=\"struct futures_util::io::ReadVectored\">ReadVectored</a>&lt;'a, R&gt;",synthetic:true,types:["futures_util::io::read_vectored::ReadVectored"]},{text:"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadExact.html\" title=\"struct futures_util::io::ReadExact\">ReadExact</a>&lt;'a, R&gt;",synthetic:true,types:["futures_util::io::read_exact::ReadExact"]},{text:"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadLine.html\" title=\"struct futures_util::io::ReadLine\">ReadLine</a>&lt;'a, R&gt;",synthetic:true,types:["futures_util::io::read_line::ReadLine"]},{text:"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToEnd.html\" title=\"struct futures_util::io::ReadToEnd\">ReadToEnd</a>&lt;'a, R&gt;",synthetic:true,types:["futures_util::io::read_to_end::ReadToEnd"]},{text:"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToString.html\" title=\"struct futures_util::io::ReadToString\">ReadToString</a>&lt;'a, R&gt;",synthetic:true,types:["futures_util::io::read_to_string::ReadToString"]},{text:"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadUntil.html\" title=\"struct futures_util::io::ReadUntil\">ReadUntil</a>&lt;'a, R&gt;",synthetic:true,types:["futures_util::io::read_until::ReadUntil"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Repeat.html\" title=\"struct futures_util::io::Repeat\">Repeat</a>",synthetic:true,types:["futures_util::io::repeat::Repeat"]},{text:"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Seek.html\" title=\"struct futures_util::io::Seek\">Seek</a>&lt;'a, S&gt;",synthetic:true,types:["futures_util::io::seek::Seek"]},{text:"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Sink.html\" title=\"struct futures_util::io::Sink\">Sink</a>",synthetic:true,types:["futures_util::io::sink::Sink"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadHalf.html\" title=\"struct futures_util::io::ReadHalf\">ReadHalf</a>&lt;T&gt;",synthetic:true,types:["futures_util::io::split::ReadHalf"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteHalf.html\" title=\"struct futures_util::io::WriteHalf\">WriteHalf</a>&lt;T&gt;",synthetic:true,types:["futures_util::io::split::WriteHalf"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Take.html\" title=\"struct futures_util::io::Take\">Take</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::take::Take"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Window.html\" title=\"struct futures_util::io::Window\">Window</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["futures_util::io::window::Window"]},{text:"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Write.html\" title=\"struct futures_util::io::Write\">Write</a>&lt;'a, W&gt;",synthetic:true,types:["futures_util::io::write::Write"]},{text:"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteVectored.html\" title=\"struct futures_util::io::WriteVectored\">WriteVectored</a>&lt;'a, W&gt;",synthetic:true,types:["futures_util::io::write_vectored::WriteVectored"]},{text:"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteAll.html\" title=\"struct futures_util::io::WriteAll\">WriteAll</a>&lt;'a, W&gt;",synthetic:true,types:["futures_util::io::write_all::WriteAll"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.Mutex.html\" title=\"struct futures_util::lock::Mutex\">Mutex</a>&lt;T&gt;",synthetic:true,types:["futures_util::lock::mutex::Mutex"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexLockFuture.html\" title=\"struct futures_util::lock::MutexLockFuture\">MutexLockFuture</a>&lt;'a, T&gt;",synthetic:true,types:["futures_util::lock::mutex::MutexLockFuture"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexGuard.html\" title=\"struct futures_util::lock::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;",synthetic:true,types:["futures_util::lock::mutex::MutexGuard"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.BiLock.html\" title=\"struct futures_util::lock::BiLock\">BiLock</a>&lt;T&gt;",synthetic:true,types:["futures_util::lock::bilock::BiLock"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.BiLockAcquire.html\" title=\"struct futures_util::lock::BiLockAcquire\">BiLockAcquire</a>&lt;'a, T&gt;",synthetic:true,types:["futures_util::lock::bilock::BiLockAcquire"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.BiLockGuard.html\" title=\"struct futures_util::lock::BiLockGuard\">BiLockGuard</a>&lt;'a, T&gt;",synthetic:true,types:["futures_util::lock::bilock::BiLockGuard"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.ReuniteError.html\" title=\"struct futures_util::lock::ReuniteError\">ReuniteError</a>&lt;T&gt;",synthetic:true,types:["futures_util::lock::bilock::ReuniteError"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()