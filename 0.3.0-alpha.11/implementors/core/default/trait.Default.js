(function() {var implementors = {};
implementors["futures_executor"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"futures_executor/struct.LocalPool.html\" title=\"struct futures_executor::LocalPool\">LocalPool</a>",synthetic:false,types:["futures_executor::local_pool::LocalPool"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"futures_executor/struct.ThreadPoolBuilder.html\" title=\"struct futures_executor::ThreadPoolBuilder\">ThreadPoolBuilder</a>",synthetic:false,types:["futures_executor::thread_pool::ThreadPoolBuilder"]},];
implementors["futures_test"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"futures_test/task/struct.NoopSpawner.html\" title=\"struct futures_test::task::NoopSpawner\">NoopSpawner</a>",synthetic:false,types:["futures_test::task::noop_spawner::NoopSpawner"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"futures_test/task/struct.PanicSpawner.html\" title=\"struct futures_test::task::PanicSpawner\">PanicSpawner</a>",synthetic:false,types:["futures_test::task::panic_spawner::PanicSpawner"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"futures_test/task/struct.PanicWake.html\" title=\"struct futures_test::task::PanicWake\">PanicWake</a>",synthetic:false,types:["futures_test::task::panic_waker::PanicWake"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"futures_test/task/struct.RecordSpawner.html\" title=\"struct futures_test::task::RecordSpawner\">RecordSpawner</a>",synthetic:false,types:["futures_test::task::record_spawner::RecordSpawner"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"futures_test/task/struct.WakeCounter.html\" title=\"struct futures_test::task::WakeCounter\">WakeCounter</a>",synthetic:false,types:["futures_test::task::wake_counter::WakeCounter"]},];
implementors["futures_util"] = [{text:"impl&lt;Fut:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesOrdered.html\" title=\"struct futures_util::stream::FuturesOrdered\">FuturesOrdered</a>&lt;Fut&gt;",synthetic:false,types:["futures_util::stream::futures_ordered::FuturesOrdered"]},{text:"impl&lt;Fut:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesUnordered.html\" title=\"struct futures_util::stream::FuturesUnordered\">FuturesUnordered</a>&lt;Fut&gt;",synthetic:false,types:["futures_util::stream::futures_unordered::FuturesUnordered"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
